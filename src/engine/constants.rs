//! Constants for use in the core engine

use super::square::Vec2;

/// The one-square diagonal moves
pub const DIAGONALS: [Vec2; 4] = [
    Vec2 {
        delta_f: 1,
        delta_r: 1,
    },
    Vec2 {
        delta_f: 1,
        delta_r: -1,
    },
    Vec2 {
        delta_f: -1,
        delta_r: 1,
    },
    Vec2 {
        delta_f: -1,
        delta_r: -1,
    },
];

// TODO: better name for this lol
/// The non-diagonal one-square moves
pub const NON_DIAGONALS: [Vec2; 4] = [
    Vec2 {
        delta_f: 1,
        delta_r: 0,
    },
    Vec2 {
        delta_f: -1,
        delta_r: 0,
    },
    Vec2 {
        delta_f: 0,
        delta_r: 1,
    },
    Vec2 {
        delta_f: 0,
        delta_r: -1,
    },
];

/// The Knight moves
pub const KNIGHT_MOVES: [Vec2; 8] = [
    Vec2 {
        delta_f: 2,
        delta_r: 1,
    },
    Vec2 {
        delta_f: 2,
        delta_r: -1,
    },
    Vec2 {
        delta_f: -2,
        delta_r: 1,
    },
    Vec2 {
        delta_f: -2,
        delta_r: -1,
    },
    Vec2 {
        delta_f: 1,
        delta_r: 2,
    },
    Vec2 {
        delta_f: -1,
        delta_r: 2,
    },
    Vec2 {
        delta_f: 1,
        delta_r: -2,
    },
    Vec2 {
        delta_f: -1,
        delta_r: -2,
    },
];

// TODO: better way to define this?
/// All one-square moves - i.e. those that the King can make
pub const KING_MOVES: [Vec2; 8] = [
    Vec2 {
        delta_f: 1,
        delta_r: 0,
    },
    Vec2 {
        delta_f: -1,
        delta_r: 0,
    },
    Vec2 {
        delta_f: 0,
        delta_r: 1,
    },
    Vec2 {
        delta_f: 0,
        delta_r: -1,
    },
    Vec2 {
        delta_f: 1,
        delta_r: 1,
    },
    Vec2 {
        delta_f: 1,
        delta_r: -1,
    },
    Vec2 {
        delta_f: -1,
        delta_r: 1,
    },
    Vec2 {
        delta_f: -1,
        delta_r: -1,
    },
];

// All square weights taken from https://www.chessprogramming.org/Simplified_Evaluation_Function
// Flipped such that the index corresponds to the primary piece array - i.e. A1
// is index 0, H8 is position 63
// cargo fmt annoyingly messes these up so that it's hard to tell what's where...

pub const BLACK_KING_POSITION_WEIGHTS: [i32; 64] = [
    // A      B      C      D      E      F      G      H
    -30, -40, -40, -50, -50, -40, -40, -30, // 1
    -30, -40, -40, -50, -50, -40, -40, -30, // 2
    -30, -40, -40, -50, -50, -40, -40, -30, // 3
    -30, -40, -40, -50, -50, -40, -40, -30, // 4
    -20, -30, -30, -40, -40, -30, -30, -20, // 5
    -10, -20, -20, -20, -20, -20, -20, -10, // 6
    20, 20, 0, 0, 0, 0, 20, 20, // 7
    20, 30, 10, 0, 0, 10, 30, 20, // 8
];

pub const BLACK_KING_ENDGAME_POSITION_WEIGHTS: [i32; 64] = [
    -50, -40, -30, -20, -20, -30, -40, -50, -30, -20, -10, 0, 0, -10, -20, -30, -30, -10, 20, 30,
    30, 20, -10, -30, -30, -10, 30, 40, 40, 30, -10, -30, -30, -10, 30, 40, 40, 30, -10, -30, -30,
    -10, 20, 30, 30, 20, -10, -30, -30, -30, 0, 0, 0, 0, -30, -30, -50, -30, -30, -30, -30, -30,
    -30, -50,
];

pub const WHITE_KING_POSITION_WEIGHTS: [i32; 64] = [
    20, 30, 10, 0, 0, 10, 30, 20, 20, 20, 0, 0, 0, 0, 20, 20, -10, -20, -20, -20, -20, -20, -20,
    -10, -20, -30, -30, -40, -40, -30, -30, -20, -30, -40, -40, -50, -50, -40, -40, -30, -30, -40,
    -40, -50, -50, -40, -40, -30, -30, -40, -40, -50, -50, -40, -40, -30, -30, -40, -40, -50, -50,
    -40, -40, -30,
];

pub const WHITE_KING_ENDGAME_POSITION_WEIGHTS: [i32; 64] = [
    -50, -30, -30, -30, -30, -30, -30, -50, -30, -30, 0, 0, 0, 0, -30, -30, -30, -10, 20, 30, 30,
    20, -10, -30, -30, -10, 30, 40, 40, 30, -10, -30, -30, -10, 30, 40, 40, 30, -10, -30, -30, -10,
    20, 30, 30, 20, -10, -30, -30, -20, -10, 0, 0, -10, -20, -30, -50, -40, -30, -20, -20, -30,
    -40, -50,
];

pub const BLACK_QUEEN_POSITION_WEIGHTS: [i32; 64] = [
    -20, -10, -10, -5, -5, -10, -10, -20, -10, 0, 0, 0, 0, 0, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10,
    -5, 0, 5, 5, 5, 5, 0, -5, 0, 0, 5, 5, 5, 5, 0, -5, -10, 5, 5, 5, 5, 5, 0, -10, -10, 0, 5, 0, 0,
    0, 0, -10, -10, -0, -10, -5, -5, -5, -10, -20,
];

pub const WHITE_QUEEN_POSITION_WEIGHTS: [i32; 64] = [
    -10, -0, -10, -5, -5, -5, -10, -20, -10, 0, 5, 0, 0, 0, 0, -10, -10, 5, 5, 5, 5, 5, 0, -10, 0,
    0, 5, 5, 5, 5, 0, -5, -5, 0, 5, 5, 5, 5, 0, -5, -10, 0, 5, 5, 5, 5, 0, -10, -10, 0, 0, 0, 0, 0,
    0, -10, -20, -10, -10, -5, -5, -10, -10, -20,
];

pub const BLACK_ROOK_POSITION_WEIGHTS: [i32; 64] = [
    0, 0, 0, 0, 0, 0, 0, 0, 5, 10, 10, 10, 10, 10, 10, 5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0,
    0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, 0, 0,
    0, 5, 5, 0, 0, 0,
];

pub const WHITE_ROOK_POSITION_WEIGHTS: [i32; 64] = [
    0, 0, 0, 5, 5, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0,
    0, -5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, 5, 10, 10, 10, 10, 10, 10, 5, 0, 0,
    0, 0, 0, 0, 0, 0,
];

pub const BLACK_BISHOP_POSITION_WEIGHTS: [i32; 64] = [
    -20, -10, -10, -10, -10, -10, -10, -20, -10, 0, 0, 0, 0, 0, 0, -10, -10, 0, 5, 10, 10, 5, 0,
    -10, -10, 5, 5, 10, 10, 5, 5, -10, -10, 0, 10, 10, 10, 10, 0, -10, -10, 10, 10, 10, 10, 10, 10,
    -10, -10, 5, 0, 0, 0, 0, 5, -10, -20, -10, -10, -10, -10, -10, -10, -20,
];

pub const WHITE_BISHOP_POSITION_WEIGHTS: [i32; 64] = [
    -20, -10, -10, -10, -10, -10, -10, -20, -10, 5, 0, 0, 0, 0, 5, -10, -10, 10, 10, 10, 10, 10,
    10, -10, -10, 0, 10, 10, 10, 10, 0, -10, -10, 5, 5, 10, 10, 5, 5, -10, -10, 0, 5, 10, 10, 5, 0,
    -10, -10, 0, 0, 0, 0, 0, 0, -10, -20, -10, -10, -10, -10, -10, -10, -20,
];

pub const BLACK_KNIGHT_POSITION_WEIGHTS: [i32; 64] = [
    -50, -40, -30, -30, -30, -30, -40, -50, -40, -20, 0, 0, 0, 0, -20, -40, -30, 0, 10, 15, 15, 10,
    0, -30, -30, 5, 15, 20, 20, 15, 5, -30, -30, 0, 15, 20, 20, 15, 0, -30, -30, 5, 10, 15, 15, 10,
    5, -30, -40, -20, 0, 5, 5, 0, -20, -40, -50, -40, -30, -30, -30, -30, -40, -50,
];

pub const WHITE_KNIGHT_POSITION_WEIGHTS: [i32; 64] = [
    -50, -40, -30, -30, -30, -30, -40, -50, -40, -20, 0, 5, 5, 0, -20, -40, -30, 5, 10, 15, 15, 10,
    5, -30, -30, 0, 15, 20, 20, 15, 0, -30, -30, 5, 15, 20, 20, 15, 5, -30, -30, 0, 10, 15, 15, 10,
    0, -30, -40, -20, 0, 0, 0, 0, -20, -40, -50, -40, -30, -30, -30, -30, -40, -50,
];

pub const BLACK_PAWN_POSITION_WEIGHTS: [i32; 64] = [
    0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 10, 10, 20, 30, 30, 20, 10, 10, 5, 5,
    10, 25, 25, 10, 5, 5, 0, 0, 0, 20, 20, 0, 0, 0, 5, -5, -10, 0, 0, -10, -5, 5, 5, 15, -10, -20,
    -20, 10, 15, 5, 0, 0, 0, 0, 0, 0, 0, 0,
];

pub const WHITE_PAWN_POSITION_WEIGHTS: [i32; 64] = [
    0, 0, 0, 0, 0, 0, 0, 0, 5, 15, -10, -20, -20, 10, 15, 5, 5, -5, -10, 0, 0, -10, -5, 5, 0, 0, 0,
    20, 20, 0, 0, 0, 5, 5, 10, 25, 25, 10, 5, 5, 10, 10, 20, 30, 30, 20, 10, 10, 50, 50, 50, 50,
    50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0,
];
